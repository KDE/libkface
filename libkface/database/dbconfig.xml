<?xml version="1.0" encoding="UTF-8"?>
<!--
 * ============================================================
 *
 * This file is a part of libkface project
 * Based on the similarly named file from the digikam project
 * http://www.digikam.org
 *
 * Date        : 2013-05-13
 * Description : Database statements
 *
 * Copyright (C) 2009 by Holger Foerster <hamsi2k at freenet dot de>
 * Copyright (C) 2009-13 by Marcel Wiesweg <marcel dot wiesweg at gmx dot de>
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General
 * Public License as published by the Free Software Foundation;
 * either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * ============================================================
 -->

<databaseconfig>
    <defaultDB>QSQLITE</defaultDB>

    <!-- Increment this version number whenever you change this file.
         On version mismatch, users will be warned.
    -->
    <version>1</version>

    <database name="QSQLITE">
        <hostName>TestHost</hostName>
        <databaseName>DatabaseName</databaseName>
        <userName>UserName</userName>
        <password>Password</password>
        <port>Port</port>
        <connectoptions>ConnectOptions</connectoptions>
        <dbservercmd></dbservercmd>
        <dbinitcmd></dbinitcmd>

        <dbactions>
              <dbaction name="CreateDB" mode="transaction">
                  <statement mode="plain">
                      CREATE TABLE Settings
                      (keyword TEXT NOT NULL UNIQUE,
                       value TEXT)
                  </statement>
                  <statement mode="plain">
                      CREATE TABLE Identities
                      (id INTEGER PRIMARY KEY,
                       type INTEGER)
                  </statement>
                  <statement mode="plain">
                      CREATE TABLE IdentityAttributes
                      (id INTEGER,
                       attribute TEXT,
                       value TEXT)
                  </statement>
              </dbaction>

              <dbaction name="CreateDBOpenTLD" mode="transaction">
                  <statement mode="plain">
                      CREATE TABLE OpenTLDData
                      (id INTEGER PRIMARY KEY,
                       identity INTEGER,
                       width  INTEGER,
                       height INTEGER,
                       minVar FLOAT,
                       positivePatches BLOB,
                       negativePatches BLOB,
                       allFeatures BLOB,
                       allLeaves BLOB)
                  </statement>
              </dbaction>

              <dbaction name="CreateDBOpenCVLBPH" mode="transaction">
                  <statement mode="plain">
                      CREATE TABLE OpenCVLBPHRecognizer
                      (id INTEGER PRIMARY KEY,
                       version INTEGER,
                       radius INTEGER,
                       neighbors INTEGER,
                       grid_x INTEGER,
                       grid_y INTEGER)
                  </statement>
                  <statement mode="plain">
                      CREATE TABLE OpenCVLBPHistograms
                      (id INTEGER PRIMARY KEY,
                       recognizerid INTEGER,
                       identity INTEGER,
                       context TEXT,
                       type INTEGER,
                       rows INTEGER,
                       cols INTEGER,
                       data BLOB)
                  </statement>
              </dbaction>

              <!-- Indices -->
              <dbaction name="CreateIndices" mode="transaction">
                  <statement mode="plain">CREATE INDEX attribute_index  ON IdentityAttributes (id);</statement>
                  <!--<statement mode="plain">CREATE TRIGGER delete_image DELETE ON Images
                      BEGIN
                      DELETE FROM ImageTags          WHERE imageid=OLD.id;
                      DELETE From ImageHaarMatrix    WHERE imageid=OLD.id;
                      DELETE From ImageInformation   WHERE imageid=OLD.id;
                      DELETE From ImageMetadata      WHERE imageid=OLD.id;
                      DELETE From VideoMetadata      WHERE imageid=OLD.id;
                      DELETE From ImagePositions     WHERE imageid=OLD.id;
                      DELETE From ImageComments      WHERE imageid=OLD.id;
                      DELETE From ImageCopyright     WHERE imageid=OLD.id;
                      DELETE From ImageProperties    WHERE imageid=OLD.id;
                      DELETE From ImageHistory       WHERE imageid=OLD.id;
                      DELETE FROM ImageRelations     WHERE subject=OLD.id OR object=OLD.id;
                      DELETE FROM ImageTagProperties WHERE imageid=OLD.id;
                      UPDATE Albums SET icon=null    WHERE icon=OLD.id;
                      UPDATE Tags SET icon=null      WHERE icon=OLD.id;
                      END;
                  </statement>-->
              </dbaction>

              <dbaction name="CreateIndicesOpenTLD" mode="transaction">
                  <statement mode="plain">CREATE INDEX opentld_index  ON OpenTLDData (id);</statement>
              </dbaction>

              <!-- Triggers -->
              <dbaction name="CreateTriggers" mode="transaction">
                  <statement mode="plain">
                      CREATE TRIGGER delete_identities DELETE ON Identities
                      BEGIN
                          DELETE FROM IdentityAttributes
                          WHERE IdentityAttributes.id = OLD.id;
                      END;
                  </statement>
              </dbaction>

              <dbaction name="CreateTriggersOpenTLD" mode="transaction">
                  <statement mode="plain">
                      CREATE TRIGGER delete_identities_opentld DELETE ON Identities
                      BEGIN
                          DELETE FROM OpenTLDData
                          WHERE OpenTLDData.id = OLD.id;
                      END;
                  </statement>
              </dbaction>

        </dbactions>
    </database>
</databaseconfig>
